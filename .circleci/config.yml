version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12.9.1-browsers
    steps:
      - checkout
      - run:
          name: Install terraform
          command: |
            mkdir /tmp/terraform
            pushd /tmp/terraform
            wget -c https://releases.hashicorp.com/terraform/0.12.20/terraform_0.12.20_linux_amd64.zip
            unzip terraform_0.12.20_linux_amd64.zip
            popd
      - run:
          name: Install dependencies
          command: |
            pushd api
            npm install
            popd
      - run:
          name: Package endpoint lambda
          command: |
            pushd api
            zip -r lambda_function_payload.zip *
            popd
      - run:
          name: Package dynamo processor lambda
          command: |
            pushd dynamo_processor
            zip -r lambda_function_payload.zip *
            popd
      - run:
          name: Check terraform state path
          command: |
            pushd infrastructure
            ./checkStatePath.sh
            popd
      - run:
          name: Apply terraform
          command: |
            pushd infrastructure/active
            /tmp/terraform/terraform init
            /tmp/terraform/terraform apply --auto-approve
            /tmp/terraform/terraform output -json > /tmp/terraform.output.json
            /tmp/terraform/terraform output > /tmp/terraform.output
            cat /tmp/terraform.output
            /tmp/terraform/terraform output -json > /tmp/terraform.output.json
            popd
      - run:
          name: Install AWS cli
          command: |
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            sudo python get-pip.py
            sudo apt-get install python-dev
            sudo pip install awscli --upgrade
            aws --version
      - run:
          name: Deploy generated_assets
          command: |
            mkdir aws_s3_bucket-infrastructure
            pushd aws_s3_bucket-infrastructure
            cp /tmp/terraform.output.json ./infrastructure.json
            aws s3 sync ./ s3://`grep aws_s3_bucket-infrastructure /tmp/terraform.output | cut -d = -f 2 | tr -d " "` --delete --acl public-read
            popd
      - run:
          name: Deploy Website
          command: |
            echo "That activity has been delegated to https://zeit.co/ferdegje"
  test:
    docker:
      - image: circleci/node:8.10.0
    steps:
      - checkout
      - run: echo hello
  delete:
    docker:
      - image: circleci/node:8.10.0
    steps:
      - checkout
      - run:
          name: Install terraform
          command: |
            mkdir /tmp/terraform
            pushd /tmp/terraform
            wget -c https://releases.hashicorp.com/terraform/0.12.20/terraform_0.12.20_linux_amd64.zip
            unzip terraform_0.12.20_linux_amd64.zip
            popd
      - run:
          name: Install dependencies
          command: |
            pushd api
            npm install
            popd
      - run:
          name: Package lambdas
          command: |
            pushd api
            zip -r lambda_function_payload.zip *
            popd
      - run:
          name: Package dynamo processor lambda
          command: |
            pushd dynamo_processor
            zip -r lambda_function_payload.zip *
            popd
      - run:
          name: Delete infrastructure
          command: |
            pushd infrastructure/dormant
            /tmp/terraform/terraform init
            /tmp/terraform/terraform apply --auto-approve
            popd

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
                - beta
    jobs:
      - delete
